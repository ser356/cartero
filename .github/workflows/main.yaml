# Copyright 2024 the Cartero authors
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# SPDX-License-Identifier: GPL-3.0-or-later
on:
    push:
      branches:
        - trunk
jobs:
    build:
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout
          uses: actions/checkout@v2
  
        - name: Install Rust
          run: |
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            echo "$HOME/.cargo/bin" >> $GITHUB_PATH
  
        - name: Verify Rust Installation
          run: |
            rustc --version
            cargo --version
  
        - name: Setting up workflow dependencies
          run: |
            sudo apt-get update
            sudo apt-get install -y meson ninja-build glib-2.0 libgtk-4-dev valac python3-gi libgtksourceview-5-dev desktop-file-utils libxml2-utils
  
        - name: Meson setup
          run: |
            meson setup build
  
        - name: Compile and Prepare
          run: |
            ninja -C build
            sudo ~/.cargo/bin/rustup default stable
            sudo env "PATH=$PATH" ninja -C build install
  
            mkdir -p ~/dist
            sudo mv /usr/local/bin/cartero /usr/local/share/cartero/cartero.gresource /usr/local/share/icons/hicolor/scalable/apps/es.danirod.Cartero.svg /usr/local/share/applications/es.danirod.Cartero.desktop ~/dist
            cd ~/dist
            mkdir src
            mv cartero cartero.gresource es.danirod.Cartero.svg es.danirod.Cartero.desktop src
            tar -czvf ../build-cartero.tar.gz *
            cd ..
  
        - name: Upload Artifact
          uses: actions/upload-artifact@v2
          with:
            name: build-cartero.tar.gz
            path: ~/build-cartero.tar.gz
  
    create-release:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Download Artifact
          uses: actions/download-artifact@v2
          with:
            name: build-cartero.tar.gz
            path: /home/runner/
  
        - name: Set up Git user
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
        # Manual semantic versioning
        # the author will bump the version manually adding a tag to the commit
        - name: Get latest tag
          id: get_tag
          run: |
            TAGID=$(git ls-remote --tags origin | awk '{print $2}' | grep -oP 'refs/tags/\K.*' | sort -V | tail -n 1)
            if [ -z "$TAGID" ]; then
              echo "No tags found, 0.1.0-pre will be used as the first tag"
              TAGID="v0.1.0-pre"
            else
              TAGID="$TAGID"
              if git rev-parse "$TAGID" >/dev/null 2>&1; then
                CHANGELOG=$(git log --pretty=format:"%h %s" $TAGID..HEAD)
              else
                echo "Tag $TAGID does not exist"
              fi
            fi
            echo "Latest tag is $TAGID"
            echo "::set-output name=tag::${TAGID}"
            echo "::set-output name=changelog::${CHANGELOG}"
  
        - name: Delete existing Release if exists
          run: |
            TAGID=${{ steps.get_tag.outputs.tag }}
            RELEASE_ID=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAGID" | jq '.id')
            curl -X DELETE "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
            echo "Deleted release $RELEASE_ID"
  
        - name: Create Release
          id: create-release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          with:
            tag_name: ${{ steps.get_tag.outputs.tag }}
            release_name: Cartero ${{ steps.get_tag.outputs.tag }}
            body: |
              ${{ steps.get_tag.outputs.changelog }}
            draft: false
            prerelease: false
          
        - name: Get File from Repo
          run: |
            wget https://raw.githubusercontent.com/ser356/cartero/trunk/.github/workflows/install.sh -O install.sh
  
        - name: Add File to tarball
          run: |
            gunzip /home/runner/build-cartero.tar.gz
            tar -rvf /home/runner/build-cartero.tar install.sh
            gzip /home/runner/build-cartero.tar
  
        - name: Upload Release Artifact
          id: upload-release-asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create-release.outputs.upload_url }}
            asset_path: /home/runner/build-cartero.tar.gz
            asset_name: build-cartero.tar.gz
            asset_content_type: application/gzip
  